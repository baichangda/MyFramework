gateway:
  id: mqtt-gateway-1
  mqtt-host: 10.0.11.50
  mqtt-port: 11883
  mqtt-topic: vin/+
  mqtt-resp-topic-prefix: vin/resp/
  mqtt-consume-thread-num: 4
  mqtt-ssl-cert-file-path: mqtt/ssl/cert.p12
  mqtt-ssl-cert-password: incar
  heart-beat-period: 3s
  parse-topic: gw-parse

spring:
  data:
    #redis配置
    #如果都进行了配置,加载的先后顺序为:
    #sentinel>cluster>single
    redis:
      #公用配置
      database: 0
      timeout: 60000
      password: incar@2023
      #异步lettuce连接池(默认)
      lettuce:
        pool:
          maxIdle: 8
          minIdle: 0
          maxActive: 8
          maxWait: -1
        shutdown-timeout: 100ms
      #主从配置
      #     sentinel:
      #       master: myMaster
      #       nodes: 127.0.0.1:23679,127.0.0.1:23680,127.0.0.1:23681
      #    #集群配置
      #     cluster:
      #       maxRedirects: 3
      #       nodes:
      #         - 114.116.107.184:7001
      #         - 114.116.107.184:7002
      #         - 114.116.107.184:7003
      #         - 114.115.141.139:7004
      #         - 114.115.141.139:7005
      #         - 114.115.141.139:7006
      #单机配置
      host: ${server_host:127.0.0.1}
      port: 6379
      ssl:
        enabled: false
  profiles.active: dev
  freemarker.cache: false
  #  kafka配置
  kafka:
    consumer:
      bootstrap-servers: 10.0.11.50:19092
      group-id: tsp-gateway
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    producer:
      bootstrap-servers: 10.0.11.50:19092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
  main:
    allow-circular-references: true

monitor:
  request-topic: monitorRequest
  response-list: monitorResponse
  server-id: ${gateway.id}
  server-type: 1
