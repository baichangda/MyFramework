apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"


configurations.configureEach {
    //去除springboot默认的logback
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    exclude module: 'logback-classic'
    exclude module: 'logback-core'
    //指定快照jar的更新策略
    resolutionStrategy {
        //缓存依赖时间、0代表不缓存
        cacheChangingModulesFor 0, 'seconds'
    }
}


dependencies {
    implementation project(":Lib-Base-Redis")
    implementation project(":Lib-Base-Kafka")
    implementation project(":Lib-Monitor-Client")

    //springboot支持
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-configuration-processor")
    //springboot cache支持
    implementation("org.springframework.boot:spring-boot-starter-cache")
    //springboot aop支持
    implementation("org.springframework.boot:spring-boot-starter-aop")
    //springboot web支持
    implementation("org.springframework.boot:spring-boot-starter-web")
    //springboot websocket支持
    implementation("org.springframework.boot:spring-boot-starter-websocket")
    //springboot log4j2支持
    implementation('org.springframework.boot:spring-boot-starter-log4j2')

    implementation group: 'com.lmax', name: 'disruptor'

    //springboot jdbc支持
    implementation("org.springframework.boot:spring-boot-starter-data-jdbc")
    //邮件支持
    implementation("org.springframework.boot:spring-boot-starter-mail")

    //springboot redis支持
    //lettuce异步客户端(默认使用lettuce)
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    //springboot validation支持
    implementation("org.springframework.boot:spring-boot-starter-validation")

    //springboot mongodb支持
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb")

    // https://mvnrepository.com/artifact/com.alibaba/easyexcel
    implementation(group: 'com.alibaba', name: 'easyexcel')

    // https://mvnrepository.com/artifact/com.github.xiaoymin/knife4j-openapi3-jakarta-spring-boot-starter
    implementation group: 'com.github.xiaoymin', name: 'knife4j-openapi3-jakarta-spring-boot-starter'


    // https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine'

    // https://mvnrepository.com/artifact/org.freemarker/freemarker
    implementation group: 'org.freemarker', name: 'freemarker'


    // https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
    runtimeOnly group: 'com.mysql', name: 'mysql-connector-j'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    runtimeOnly group: 'org.postgresql', name: 'postgresql'


    testImplementation("org.springframework.boot:spring-boot-starter-test")

    // https://mvnrepository.com/artifact/cn.dev33/sa-token-spring-boot-starter
    implementation group: 'cn.dev33', name: 'sa-token-spring-boot3-starter'
    implementation group: 'cn.dev33', name: 'sa-token-redis-jackson'

    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation group: 'org.xerial', name: 'sqlite-jdbc'

    // https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-sentinel
    implementation group: 'com.alibaba.cloud', name: 'spring-cloud-starter-alibaba-sentinel'
}

bootJar {
    exclude "**/*-dev.yml"
    exclude "**/*-test.yml"
    manifest {
        attributes 'Start-Class': 'cn.bcd.Application'
    }
    //指定jar文件的名称
    archiveBaseName = "${project.name}"
    version = ''
}

bootRun {
    /**
     * 启动时候带入jvm的参数;如下(启动jvisualvm监控)
     * nohup gradle bootRun -PjvmArgs="-Djava.rmi.server.hostname=172.16.24.36 -Dcom.sun.management.jmxremote.port=10001 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=true" &
     */
    if (project.hasProperty('jvmArgs')) {
        jvmArgs(project.jvmArgs.split("\\s+") as List)
    }
    //这些参数在bootJar中不会生效、如果需要添加、则在java -jar后面加上、必须紧接着-jar
    //开启缓存行补齐
    jvmArgs('-XX:-RestrictContended')
    jvmArgs('-Dfile.encoding=UTF-8')
    jvmArgs('-Dsun.jnu.encoding=UTF-8')
    jvmArgs('-DLog4jContextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector')
//    jvmArgs('--add-opens=java.base/java.nio=ALL-UNNAMED')
}